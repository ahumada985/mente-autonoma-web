git hub

git status

git add .

git commit -m "游꿛 Redise침o completo: Hero con gradiente azul-rosa, servicios unificados, secci칩n IA redise침ada, CTA eliminado, tecnolog칤as en carrusel, nueva secci칩n de logos oficiales"

git push origin main


Comandos B치sicos (Siempre en este orden):

Ver el estado de los archivos:
   git status

Agregar todos los cambios:
   git add .

Hacer el commit con un mensaje descriptivo:
   git commit -m "游닇 Descripci칩n de lo que cambiaste"

Subir a GitHub:
   git push origin main




Comandos Adicionales 칔tiles:


Ver el historial de commits:
  git log --oneline

Ver qu칠 rama est치s:
  git branch

Si quieres descartar cambios y volver a la versi칩n anterior:
  git checkout -- nombre-del-archivo

Si quieres ver los cambios espec칤ficos :



reaturar versi칩n ///

git checkout -- src/app/page.tsx


C칩mo Restaurar a la 칔ltima Versi칩n - Gu칤a Completa
1. Restaurar Archivo Espec칤fico (Recomendado)
git checkout -- nombre_del_archivo
Ejemplo:
git checkout -- src/app/page.tsx


2. Restaurar Todos los Archivos Modificados
git checkout -- .


3. Restaurar a un Commit Espec칤fico
git checkout -- nombre_del_archivo


4. Ver el Historial de Commits
git log --oneline


5. Restaurar a un Commit Anterior
git reset --hard HEAD~1  # Retrocede 1 commit
git reset --hard HEAD~2  # Retrocede 2 commits

6. Restaurar a un Commit Espec칤fico por Hash
git reset --hard abc1234  # Reemplaza abc1234 con el hash del commit


游댃 Comandos que Usamos:
git status - Ver el estado actual del repositorio
git checkout -- archivo - Restaurar archivo espec칤fico
git log --oneline - Ver historial de commits
丘멆잺 Importante:
git checkout -- archivo es seguro y solo afecta el archivo especificado
git reset --hard es m치s peligroso porque elimina TODOS los cambios no confirmados
Siempre usa git status antes de restaurar para ver qu칠 archivos est치n modificados



